{"version":3,"sources":["Pages/Home/images/austin-tx-map.PNG","Components/Map/Map.js","Components/Search/Search.js","Pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Company","text","className","SimpleMap","style","height","width","bootstrapURLKeys","key","process","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Search","state","results","type","placeholder","Home","test","id","Map","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kKAAAA,EAAOC,QAAU,IAA0B,2C,4LCGrCC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,yBAAKC,UAAU,mBAAmBD,IAE1DE,E,uKAUF,OAEE,yBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACpC,kBAAC,IAAD,CACEC,iBAAkB,CAAEC,IAAKC,2CACzBC,cAAeC,KAAKC,MAAMC,OAC1BC,YAAaH,KAAKC,MAAMG,MAExB,kBAAC,EAAD,CACEC,IAAK,MACLC,KAAM,MACNhB,KAAM,IAER,kBAAC,EAAD,CACEe,IAAK,MACLC,KAAM,MACNhB,KAAK,MAEP,kBAAC,EAAD,CACEe,IAAK,MACLC,KAAM,MACNhB,KAAK,Y,GA/BOiB,aAAlBf,EACGgB,aAAe,CACpBN,OAAQ,CACNG,IAAK,QACLC,KAAM,SAERF,KAAM,IAiCKZ,QCPAiB,G,kNAhCbC,MAAQ,CACNC,QAAS,I,uDAaT,OACF,0BAAMpB,UAAU,SACf,yBAAKA,UAAU,OACZ,yBAAKA,UAAU,gCACb,2BAAOqB,KAAK,OAAOrB,UAAU,eAAesB,YAAY,WAE1D,yBAAKtB,UAAU,6CACb,2BAAOqB,KAAK,OAAOrB,UAAU,eAAesB,YAAY,YAE1D,yBAAKtB,UAAU,sBACb,4BAAQqB,KAAK,SAASrB,UAAU,mBAAhC,iB,GAzBagB,cCuCNO,G,wNApCbJ,MAAQ,CACNK,KAAM,Y,uDAKN,OACE,yBAAKC,GAAG,gBAAgBzB,UAAU,mBAChC,yBAAKyB,GAAG,gBAAgBzB,UAAU,OAC9B,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,OACb,kBAAC0B,EAAD,QAGJ,yBAAK1B,UAAU,SACb,2CACA,6BACA,uDACA,sjBACA,4BACE,wFACA,kFACA,mDAEF,0V,GA5BKgB,cCWJW,G,MAZH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,QAAQC,UAAWP,QCEzBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2943c73c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/austin-tx-map.1cf290d0.PNG\";","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n \nconst Company = ({ text }) => <div className=\"btn btn-primary\">{text}</div>;\n \nclass SimpleMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 30.2672,\n      lng: -97.7431\n    },\n    zoom: 11\n  };\n  \n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLEMAPLSKEY }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <Company\n            lat={30.27}\n            lng={-97.75}\n            text={1}\n          />\n          <Company\n            lat={30.35}\n            lng={-97.77}\n            text=\"2\"\n          />\n          <Company\n            lat={30.22}\n            lng={-97.75}\n            text=\"3\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n \nexport default SimpleMap;\n","import React, { Component } from \"react\";\n// import API from \"../../utils/API\";\nimport \"./Search.css\"\n\nclass Search extends Component {\n  state = {\n    results: {}\n  };\n\n  // componentDidMount() {\n  //   API.getTest()\n  //     .then(res =>\n  //       // this.setState({ results: res.data})\n  //       console.log(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // }\n\n  render() {\n    return (\n  <form className=\"w-100\">\n   <div className=\"row\">\n      <div className=\"col-12 col-md-5 pb-3 pb-md-0\">\n        <input type=\"text\" className=\"form-control\" placeholder=\"What:\"/>\n      </div>\n      <div className=\"col-12 col-md-5 pt-3 pb-3 pt-md-0 pb-md-0\">\n        <input type=\"text\" className=\"form-control\" placeholder=\"Where:\"/>\n      </div>\n      <div className=\"col-2 pt-3 pt-md-0\">\n        <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n      </div>\n    </div> \n  </form>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\r\nimport Map from \"../../Components/Map\"\r\nimport Search from \"../../Components/Search\"\r\nimport Hero from \"./images/austin-tx-map.PNG\"\r\nimport \"./Home.css\"\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    test: \"Success!\"\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"homeContainer\" className=\"container-fluid\">\r\n        <div id=\"container-row\" className=\"row\">\r\n            <div className=\"col-8\">\r\n              <div className=\"row p-5\">\r\n                <Search/>\r\n              </div>\r\n              <div className=\"row\">\r\n                <Map/>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <h1>Lorem Ipsum</h1>\r\n              <hr/>\r\n              <h2>Perspiciatis Unde Omnis</h2>\r\n              <p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus.</p>\r\n              <ul>\r\n                <li>Et harum quidem rerum facilis est et expedita distinctio</li>\r\n                <li>Itaque earum rerum hic tenetur a sapiente delectus</li>\r\n                <li>Nam libero tempore</li>\r\n              </ul>\r\n              <p>Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.</p>\r\n\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/home\" component={Home} />\n        {/* <Route component={NoMatch} /> */}\n      </Switch>\n  </Router> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}